{"version":3,"sources":["main.js"],"names":["htmlElement","constructor","element","this","copy","clone","remove","append","parent","tetragon3d","speed","super","rotationSpeed","planes","children","timeMeasure","start","undefined","stop","measureAngle","motionData","currentAngle","targetAngle","move","animateRotationY","computeRotatingTime","css","Math","ceil","window","requestAnimationFrame","computeTransitionSpeed","distance","abs","rotationTime","floor","console","log","getTargetAngle","e","$","target","attr","shouldChangeDirection","planeClickEvent","flag","off","myElement","easeOutQuad","t","b","c","d"],"mappings":"AAAA,MAAMA,YACJC,YAAYC,GACVC,KAAKD,QAAUA,EAEjBE,OACE,OAAOD,KAAKD,QAAQG,QAEtBC,SACEH,KAAKD,QAAQI,SAEfC,OAAOC,GACHL,KAAKD,QAAQK,OAAOC,IAI1B,MAAMC,mBAAmBT,YACvBC,YAAYC,EAASQ,GACnBC,MAAMT,GACNC,KAAKS,cAAgBF,EAAQ,EAAI,EAAIA,EAErCP,KAAKU,OAASV,KAAKD,QAAQY,SAAS,OACpCX,KAAKY,YAAc,CACjBC,WAAOC,EACPC,UAAMD,EACNE,aAAc,IAEhBhB,KAAKiB,WAAa,CAChBC,aAAc,EACdC,iBAAaL,EACbP,WAAOO,EACPM,MAAM,GAIVC,mBAEOrB,KAAKiB,WAAWG,OAEnBpB,KAAKiB,WAAWV,MAAQP,KAAKsB,sBAE7BtB,KAAKiB,WAAWC,cAAgBlB,KAAKS,cACrCT,KAAKiB,WAAWC,aAAelB,KAAKiB,WAAWC,eAAiB,IAAM,EAAIlB,KAAKiB,WAAWC,aAE1FlB,KAAKD,QAAQwB,IAAK,2CAA4CvB,KAAKiB,WAAWC,oBAG1EM,KAAKC,KAAKzB,KAAKiB,WAAWC,gBAAkBlB,KAAKiB,WAAWE,cAC9DnB,KAAKiB,WAAWG,MAAO,GAG1BM,OAAAC,sBAAA,IAAA3B,KAAAqB,qBAIDO,yBAGD,OAFaC,KAAAA,IAAW7B,KAAvBiB,WAAAE,aAAAK,KAAAM,IAAA9B,KAAAiB,WAAAC,eACoBD,GACrBjB,KAAAiB,WAAAV,MAEDe,sBAGI,IAAIS,EAAJP,KAAAM,IAAAN,KAAAQ,MAAAhC,KAAAiB,WAAAC,eAEFe,QAAAC,IAAAhB,GA6BEiB,eAAAC,GAIE,OAFAC,EAAAD,EAAAE,QAAAC,KAAA,OAGA,IAAA,QACFvC,KAAKiB,WAALE,YAAA,EACE,MACA,IAAA,QACFnB,KAAKiB,WAALE,aAAA,GACE,MACA,IAAA,OAZJnB,KAAAiB,WAAAE,aAAA,IAcD,MACDqB,IAAAA,OACMxC,KAAKiB,WAAWE,aAAhB,KAKFqB,wBAC2B/B,IAA3BT,KAAKS,WAALU,YAJAnB,KAAKS,cAAgBT,KAAKiB,WAAWC,cAAgB,IAAMlB,KAAKS,eAAiBT,KAAKS,cAShFT,KAAAiB,WAAAC,aAAAlB,KAAAiB,WAAAE,cAEJnB,KAAAS,eAAoB2B,KAApB3B,eAKDgC,gBANDC,GADFA,EASE1C,KAAKU,OAAOiC,GAAZ,QAAAP,IACDpC,KAAAmC,eAAAC,GANyBpC,KAAK4B,yBA5GC5B,KAAAwC,0BA4HlCI,KAAAA,OAAUvB,OASXgB,EAXD,KACE,IAAIO,EAAY,IAAItC,WAAW+B,EAAE,cAAc,IAC/CO,EAAUvB,mBACVuB,EAAUH,iBAAgB,GAE1BjB,KAAKqB,YAAc,SAAUC,EAAGC,EAAGC,EAAGC,GAEpC,OAAQD,GADRF,GAAKG,IACUH,EAAE,GAAKC,GAGXvB,KAAKqB,YAAY,GAAI,GAAG,GAAG","file":"main.js","sourcesContent":["class htmlElement {\n  constructor(element){\n    this.element = element\n  }\n  copy(){\n    return this.element.clone()\n  }\n  remove(){\n    this.element.remove()\n  }\n  append(parent){\n      this.element.append(parent)\n  }\n}\n\nclass tetragon3d extends htmlElement{\n  constructor(element ,speed){\n    super(element);\n    this.rotationSpeed = speed > 1 ? 1 : speed;\n\n    this.planes = this.element.children('div');\n    this.timeMeasure = {\n      start: undefined,\n      stop: undefined,\n      measureAngle: 30\n    };\n    this.motionData = {\n      currentAngle: 0,\n      targetAngle: undefined,\n      speed: undefined,\n      move: true\n    }\n  }\n\n  animateRotationY() {\n\n    if ( this.motionData.move ){\n\n      this.motionData.speed = this.computeRotatingTime();\n\n      this.motionData.currentAngle -= this.rotationSpeed;\n      this.motionData.currentAngle = this.motionData.currentAngle <= -360 ? 0 : this.motionData.currentAngle;\n\n      this.element.css( \"transform\", ` translateZ(-250px) rotateY(${this.motionData.currentAngle}deg)` );\n\n      // targetAngle is set in click event, so after click event rotation will stop\n      if( Math.ceil(this.motionData.currentAngle) === this.motionData.targetAngle )\n        this.motionData.move = false;\n\n      window.requestAnimationFrame( ()=> this.animateRotationY() )\n    }\n  }\n\n  computeTransitionSpeed(){\n    let distance = Math.abs(this.motionData.targetAngle) - Math.abs(this.motionData.currentAngle);\n    let ratio = distance / 45;\n    return ratio * this.motionData.speed\n  }\n\n  computeRotatingTime(){\n\n    let currentAngle = Math.abs( Math.floor(this.motionData.currentAngle) );\n      let rotationTime;\n      console.log(currentAngle);\n    /*let flag = !(currentAngle % 30);\n\n    if(this.timeMeasure.measureAngle === currentAngle){\n      this.timeMeasure.stop = new Date();\n      rotationTime =  (this.timeMeasure.stop - this.timeMeasure.start)/1000;\n      return rotationTime;\n    }\n\n    if ( flag ) {\n      this.timeMeasure.measureAngle = this.motionData.currentAngle === 360 ? 30 : currentAngle + 30;\n      this.timeMeasure.start = new Date();\n    }\n    console.log('set measure ', currentAngle, this.timeMeasure.measureAngle);*/\n\n\n    /*if(this.timeMeasure.stop && this.timeMeasure.start) {\n\n      this.timeMeasure.stop = undefined;\n      this.timeMeasure.start = undefined;\n      return rotationTime;\n    }\n    return this.motionData.speed;*/\n  }\n\n  getTargetAngle (e) {\n\n    const targetId = $(e.target).attr(\"id\");\n\n    switch (targetId) {\n      case \"front\":\n        this.motionData.targetAngle = 0;\n        break;\n      case \"right\":\n        this.motionData.targetAngle = -90;\n        break;\n      case \"back\":\n        this.motionData.targetAngle = -180;\n        break;\n      case \"left\":\n        this.motionData.targetAngle = -270;\n        break;\n    }\n  }\n  shouldChangeDirection(){\n    if( this.motionData.targetAngle === 0 ){\n      //if clicked in front plane, which set target angle to 0 , must have special check, cause current angle is always lesser than 0\n      this.rotationSpeed = this.motionData.currentAngle < -180 ? this.rotationSpeed : -this.rotationSpeed\n\n    } else if ( this.motionData.currentAngle < this.motionData.targetAngle )\n      //all the other cases\n      this.rotationSpeed = -this.rotationSpeed;\n\n  }\n\n  planeClickEvent(flag){\n    if(flag){\n      this.planes.on( 'click', (e)=> {\n        this.getTargetAngle(e);\n\n        let transitionSpeed = this.computeTransitionSpeed();\n        this.shouldChangeDirection();\n\n      } )\n    } else {\n      this.planes.off()\n    }\n\n  }\n\n\n\n}\n\n$(() => {\n  let myElement = new tetragon3d($('#top-layer'),.5);\n  myElement.animateRotationY();\n  myElement.planeClickEvent(true);\n\n  Math.easeOutQuad = function (t, b, c, d) {\n    t /= d;\n    return -c * t*(t-2) + b;\n  };\n\n  let easing = Math.easeOutQuad(0.6,54,36,0.4);\n});"]}