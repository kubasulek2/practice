{"version":3,"sources":["main.js"],"names":["$","on","plane","this","attr","parentElement","parent","rotation","css","addClass"],"mappings":"AAAAA,EAAE,KAEaA,EAAE,kBAERC,GAAG,QAAS,WACjB,MAAMC,EAAQF,EAAEG,MAAMC,KAAK,MACrBC,EAAgBL,EAAEG,MAAMG,SAC9B,IAAIC,EAEJ,OAAQL,GACN,IAAK,QACHK,EAAW,EACX,MACF,IAAK,QACHA,GAAY,GACZ,MACF,IAAK,OACHA,GAAY,IACZ,MACF,IAAK,OACHA,GAAY,IAGhBF,EAEEG,IAAA,uBAAA,UArBJR,EAAAG,MAAAM,SAAA","file":"main.js","sourcesContent":["$(() => {\n\n  let planes = $('#top-layer>div');\n\n  planes.on('click', function () {\n    const plane = $(this).attr(\"id\");\n    const parentElement = $(this).parent();\n    let rotation;\n\n    switch (plane) {\n      case \"front\":\n        rotation = 0;\n        break;\n      case \"right\":\n        rotation = -90;\n        break;\n      case \"back\":\n        rotation = -180;\n        break;\n      case \"left\":\n        rotation = -270;\n        break;\n    }\n    parentElement\n      .css(\"animation-play-state\", 'paused')\n      //.css('transform', `translateZ(-250px) rotateY(${rotation}deg)`)\n    $(this).addClass(\"focus\");\n\n  });\n\n  function animateRotationY(obj, startAngle, timeInSec) {\n    let frame = (timeInSec *1000 / 360).toFixed(4);\n    let deg = startAngle;\n\n\n\n      const animation = window.setInterval(()=>{\n        deg = deg < -360 ? 0 : deg;\n        deg++;\n        console.log(deg);\n        obj.css(\"transform\", ` translateZ(-250px) rotateY(${deg}deg)`)\n      },frame)\n\n  }\n  //animateRotationY($('#top-layer'), 0, 6);\n\n\n  function getRotationDegrees(obj) {\n    let angle;\n    let matrix = obj.getComputedStyle(\"-webkit-transform\") ||\n      obj.getComputedStyle(\"-moz-transform\")    ||\n      obj.getComputedStyle(\"-ms-transform\")     ||\n      obj.getComputedStyle(\"-o-transform\")      ||\n      obj.getComputedStyle(\"transform\");\n    if(matrix !== 'none') {\n      let values = matrix.split('(')[1].split(')')[0].split(',');\n      let a = values[0];\n      let b = values[1];\n      angle = Math.round(Math.atan2(b, a) * (180/Math.PI));\n\n    } else {\n      angle = 0;\n    }\n    return (angle < 0) ? angle + 360 : angle;\n  }\n\n});"]}