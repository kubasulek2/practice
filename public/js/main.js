class htmlElement{constructor(e){this.element=e}copy(){return this.element.clone()}remove(){this.element.remove()}append(e){this.element.append(e)}}class tetragon3d extends htmlElement{constructor(e,t){super(e),this.baseSpeed=t>1?1:t,this.rotationSpeed=t>1?1:t,this.clickedId="",this.planes=this.element.children(".face"),this.speedMeasure={start:void 0,stop:void 0,lastMeasuredAngle:void 0,speedArr:[],avgSpeed:void 0},this.motionData={currentAngle:0,targetAngle:void 0,move:!0},this.easing=[]}calculateEntryValues(){this.speedMeasure.avgSpeed=30/(60*this.rotationSpeed)}animateRotationY(){if(this.speedMeasure.avgSpeed||this.calculateEntryValues(),this.motionData.move){let e=this.computeRotatingTime();this.computeAvgSpeed(e),0!==this.easing.length&&this.applyEasing(),0===this.easing.length&&this.rotationSpeed<this.baseSpeed&&this.accelerate(),this.motionData.currentAngle-=this.rotationSpeed,this.motionData.currentAngle=this.motionData.currentAngle<=-360?0:this.motionData.currentAngle,this.element.css("transform",` translateZ(-250px) rotateY(${this.motionData.currentAngle}deg)`),Math.round(this.motionData.currentAngle)===this.motionData.targetAngle&&(this.motionData.move=!1,this.element.css("transform",` translateZ(-250px) rotateY(${this.motionData.targetAngle}deg)`)),window.requestAnimationFrame(()=>this.animateRotationY())}else this.animatePlane()}computeEasing(e){let t,a,s,i,n,r,o=Math.abs(Math.abs(this.motionData.targetAngle)-Math.abs(this.motionData.currentAngle)),h=o<20?5:10,l=[],c=this.rotationSpeed;switch(!0){case o<=10:a=0;break;case o<=20:a=3;break;case o<=30:a=8;break;case o<=40:a=15;break;case o<=50:a=24;break;case o<=60:a=32;break;case o<=70:a=40;break;case o<=80:a=50;break;case o<=90:a=60}t=(o-a)/h,i=c/h,s=c,r=n="forth"===e?this.motionData.currentAngle-a:this.motionData.currentAngle+a,t="forth"===e?-t:t;for(let e=1;e<h;e++)r+=t,s=(s-=i)>0?s<.1?.1:s:s>-.1?-.1:s,l[e-1]=[],l[e-1].push(Math.round(r)),l[e-1].push(parseFloat(s.toFixed(2)));return l}applyEasing(){this.easing.forEach(e=>{Math.round(this.motionData.currentAngle)===e[0]&&(this.rotationSpeed=e[1])})}computeRotatingTime(){let e,t=Math.abs(Math.floor(this.motionData.currentAngle)),a=!(t%31);return this.speedMeasure.lastMeasuredAngle===t?null:(this.speedMeasure.lastMeasuredAngle=t,this.speedMeasure.measureAngle===t?(this.speedMeasure.stop=new Date,e=(this.speedMeasure.stop-this.speedMeasure.start)/1e3):(a&&(this.speedMeasure.measureAngle=360===this.motionData.currentAngle?30:t+30,this.speedMeasure.start=new Date),null))}computeAvgSpeed(e){null!==e&&(this.speedMeasure.speedArr.push(e),this.speedMeasure.speedArr.length>4&&this.speedMeasure.speedArr.shift(),this.speedMeasure.avgSpeed=this.speedMeasure.speedArr.reduce((e,t)=>e+t,0)/this.speedMeasure.speedArr.length)}getTargetAngle(e){switch($(e.target).attr("id")){case"front":this.motionData.targetAngle=0;break;case"right":this.motionData.targetAngle=-90;break;case"back":this.motionData.targetAngle=-180;break;case"left":this.motionData.targetAngle=-270}}shouldChangeDirection(){let e="forth";return 0===this.motionData.targetAngle?(this.rotationSpeed=this.motionData.currentAngle<-180?this.rotationSpeed:-this.rotationSpeed,e=this.motionData.currentAngle<-180?"forth":"back"):this.motionData.currentAngle<this.motionData.targetAngle&&(this.rotationSpeed=-this.rotationSpeed,e="back"),e}animatePlane(){this.planes.filter((e,t)=>$(t).attr("id")===this.clickedId).addClass("focus")}planeClickEvent(e){e?this.planes.on("click",e=>{let t=$(e.currentTarget);e.stopPropagation(),this.getTargetAngle(e),this.clickedId=e.target.id;let a=this.shouldChangeDirection();this.easing=this.computeEasing(a),t.css("cursor","initial"),$("body").css("cursor","pointer").one("click",e=>{t.css("cursor","pointer"),$(e.currentTarget).css("cursor","initial"),this.restoreAnimation()})}):this.planes.off()}restoreAnimation(){let e=this.planes.filter((e,t)=>$(t).attr("id")===this.clickedId);e.removeClass("focus"),this.easing=[],this.motionData.move=!0,this.motionData.targetAngle=void 0,this.clickedId="",this.rotationSpeed=this.rotationSpeed<0?-this.rotationSpeed:this.rotationSpeed,e.one("transitionend",()=>{this.animateRotationY()})}accelerate(){this.rotationSpeed=parseFloat((this.rotationSpeed+.01).toFixed(2))}}let myElement=new tetragon3d($("#top-layer"),.5);$(()=>{myElement.animateRotationY(),myElement.planeClickEvent(!0)});
//# sourceMappingURL=main.js.map
